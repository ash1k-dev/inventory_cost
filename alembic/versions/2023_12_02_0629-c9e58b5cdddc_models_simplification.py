"""models simplification

Revision ID: c9e58b5cdddc
Revises: 5b42bbf87506
Create Date: 2023-12-02 06:29:46.650172

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "c9e58b5cdddc"
down_revision: Union[str, None] = "5b42bbf87506"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "items",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("app_id", sa.Integer(), nullable=False),
        sa.Column("classid", sa.BigInteger(), nullable=False),
        sa.Column("cost", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("classid"),
    )
    op.create_table(
        "steams",
        sa.Column("steam_id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.telegram_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "inventorys",
        sa.Column("games_id", sa.Integer(), nullable=False),
        sa.Column("steam_id", sa.BigInteger(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["steam_id"], ["steams.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "itemininventorys",
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("first_cost", sa.Integer(), nullable=False),
        sa.Column("inventory_id", sa.Integer(), nullable=True),
        sa.Column("item_id", sa.BigInteger(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["inventory_id"], ["inventorys.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["item_id"], ["items.classid"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("steamids")
    op.drop_table("steaminventorys")
    op.drop_table("steamitemsininventorys")
    op.drop_table("steamitems")
    op.add_column(
        "gameinaccounts", sa.Column("first_cost", sa.Integer(), nullable=False)
    )
    op.add_column(
        "gameinaccounts", sa.Column("steam_id", sa.BigInteger(), nullable=True)
    )
    op.add_column("gameinaccounts", sa.Column("game_id", sa.Integer(), nullable=True))
    op.alter_column(
        "gameinaccounts", "game_name", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "gameinaccounts", "time_in_game", existing_type=sa.INTEGER(), nullable=False
    )
    op.create_foreign_key(
        None, "gameinaccounts", "games", ["game_id"], ["game_id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "gameinaccounts", "steams", ["steam_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_column("gameinaccounts", "first_game_cost")
    op.add_column("games", sa.Column("name", sa.String(), nullable=False))
    op.add_column("games", sa.Column("cost", sa.Integer(), nullable=False))
    op.drop_column("games", "game_name")
    op.drop_column("games", "game_cost")
    op.add_column("gametracks", sa.Column("first_cost", sa.Integer(), nullable=False))
    op.add_column("gametracks", sa.Column("user_id", sa.Integer(), nullable=True))
    op.add_column("gametracks", sa.Column("game_id", sa.Integer(), nullable=True))
    op.create_foreign_key(
        None, "gametracks", "games", ["game_id"], ["game_id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "gametracks", "users", ["user_id"], ["telegram_id"], ondelete="CASCADE"
    )
    op.drop_column("gametracks", "first_game_cost")
    op.add_column("itemtracks", sa.Column("first_cost", sa.Integer(), nullable=False))
    op.add_column("itemtracks", sa.Column("user_id", sa.Integer(), nullable=True))
    op.add_column("itemtracks", sa.Column("item_id", sa.BigInteger(), nullable=True))
    op.create_foreign_key(
        None, "itemtracks", "users", ["user_id"], ["telegram_id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "itemtracks", "items", ["item_id"], ["classid"], ondelete="CASCADE"
    )
    op.drop_column("itemtracks", "first_item_cost")
    op.add_column("users", sa.Column("name", sa.String(), nullable=True))
    op.drop_column("users", "user_name")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users", sa.Column("user_name", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.drop_column("users", "name")
    op.add_column(
        "itemtracks",
        sa.Column("first_item_cost", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "itemtracks", type_="foreignkey")
    op.drop_constraint(None, "itemtracks", type_="foreignkey")
    op.drop_column("itemtracks", "item_id")
    op.drop_column("itemtracks", "user_id")
    op.drop_column("itemtracks", "first_cost")
    op.add_column(
        "gametracks",
        sa.Column("first_game_cost", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "gametracks", type_="foreignkey")
    op.drop_constraint(None, "gametracks", type_="foreignkey")
    op.drop_column("gametracks", "game_id")
    op.drop_column("gametracks", "user_id")
    op.drop_column("gametracks", "first_cost")
    op.add_column(
        "games", sa.Column("game_cost", sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "games", sa.Column("game_name", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.drop_column("games", "cost")
    op.drop_column("games", "name")
    op.add_column(
        "gameinaccounts",
        sa.Column("first_game_cost", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "gameinaccounts", type_="foreignkey")
    op.drop_constraint(None, "gameinaccounts", type_="foreignkey")
    op.alter_column(
        "gameinaccounts", "time_in_game", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "gameinaccounts", "game_name", existing_type=sa.VARCHAR(), nullable=True
    )
    op.drop_column("gameinaccounts", "game_id")
    op.drop_column("gameinaccounts", "steam_id")
    op.drop_column("gameinaccounts", "first_cost")
    op.create_table(
        "steamitems",
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("app_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("classid", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("item_cost", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id", name="steamitems_pkey"),
        sa.UniqueConstraint("classid", name="steamitems_classid_key"),
    )
    op.create_table(
        "steamitemsininventorys",
        sa.Column("amount", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("first_item_cost", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="steamitemsininventorys_pkey"),
    )
    op.create_table(
        "steaminventorys",
        sa.Column("games_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "first_inventory_cost", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("inventory_cost", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id", name="steaminventorys_pkey"),
    )
    op.create_table(
        "steamids",
        sa.Column("steam_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("steam_name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id", name="steamids_pkey"),
    )
    op.drop_table("itemininventorys")
    op.drop_table("inventorys")
    op.drop_table("steams")
    op.drop_table("items")
    # ### end Alembic commands ###
